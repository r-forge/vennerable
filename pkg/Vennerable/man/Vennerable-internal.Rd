\name{Vennerable-internal}
\Rdversion{1.1}

\alias{TDEdgeList-class}
\alias{TDFaceList-class}
\alias{VDedgeDrawn-class}
\alias{VDedgeLines-class}
\alias{VDedgeSector-class}
\alias{TDEdgeList-class}
\alias{TDEdgeList-class}
\alias{.edge.to.xy-methods} 
\alias{.edge.to.xy,VDedgeLines,missing-method}
\alias{.edge.to.xy,VDedgeLines,numeric-method} 
\alias{.edge.to.xy,VDedgeSector,missing-method} 
\alias{.edge.to.xy,VDedgeSector,numeric-method}
\alias{.checkPointOnEdge-methods} h
\alias{.checkPointOnEdge,VDedgeLines-method}
\alias{.checkPointOnEdge,VDedgeSector-method}
\alias{.findIntersectionByType-methods} 
\alias{.findIntersectionByType,VDedgeLines,VDedgeLines-method} 
\alias{.findIntersectionByType,VDedgeLines,VDedgeSector-method} 
\alias{.findIntersectionByType,VDedgeSector,VDedgeLines-method} 
\alias{.findIntersectionByType,VDedgeSector,VDedgeSector-method}
\alias{.identical-methods} 
\alias{.identical,VDedgeLines,VDedgeLines-method} 
\alias{.identical,VDedgeLines,VDedgeSector-method} 
\alias{.identical,VDedgeSector,VDedgeLines-method} 
\alias{.identical,VDedgeSector,VDedgeSector-method} 
\alias{.midpoint-methods} 
\alias{.midpoint,VDedgeLines-method} 
\alias{.midpoint,VDedgeSector-method}
\alias{.reverseEdge-methods} 
\alias{.reverseEdge,VDedgeLines-method} 
\alias{.reverseEdge,VDedgeSector-method} 
\alias{.splitEdgeAtPoint-methods} 
\alias{.splitEdgeAtPoint,VDedgeLines-method} 
\alias{.splitEdgeAtPoint,VDedgeSector-method} 
\alias{joinEdges-methods} 
\alias{joinEdges,VDedgeLines,VDedgeLines-method} 
\alias{joinEdges,VDedgeSector,VDedgeSector-method}


\alias{show,TDFaceList-method}
\alias{show,VDedgeDrawn-method}
\alias{show,VDedgeLines-method}
\alias{show,VDedgeSector-method}

\alias{addcovers}
\alias{addFace}
\alias{addSedge}
\alias{addSetToDrawing}
\alias{Areas}
\alias{battle.function}
\alias{buildVennDiagrams}
\alias{cog.function}
\alias{compute.AWFE}
\alias{compute.C2}
\alias{compute.C3}
\alias{compute.CR}
\alias{compute.delta}
\alias{compute.E4}
\alias{compute.S2}
\alias{compute.S3}
\alias{compute.T3}
\alias{ComputeAreas}
\alias{CreateViewport}
\alias{cutAWFE}
\alias{cutAWFE4}
\alias{dark.matter.signature}
\alias{deleteFace}
\alias{deltagivenouter}
\alias{deltasmooth}
\alias{faceAreas}
\alias{FaceColours}
\alias{FaceTextColours}
\alias{fequal}
\alias{getEdge}
\alias{getFace}
\alias{Indicator}
\alias{injectEdge}
\alias{injectPoint}
\alias{injectPoints}
\alias{internalPointsofFaces}
\alias{IntersectionMidpoints}
\alias{joinEdges}
\alias{joinEdgesInDrawing}
\alias{make.E4}
\alias{make.maxiray}
\alias{make.setlist}
\alias{make.setlist.from.AWFE}
\alias{makeAWFE}
\alias{makeAWFE4star}
\alias{makeAWFESets}
\alias{makeAWFEstar}
\alias{makeirs}
\alias{makePMSGn}
\alias{makeQn}
\alias{makeSCD}
\alias{makesrp}
\alias{makevp.eqsc}
\alias{matched.parentheses}
\alias{my.tsort}
\alias{newEdgeLines}
\alias{newEdgeSector}
\alias{newTissueFromCircle}
\alias{newTissueFromEllipse}
\alias{newTissueFromPolygon}
\alias{node.to.ray}
\alias{NumberOfSets}
\alias{only.set.crossings}
\alias{PlotFaces}
\alias{PlotIntersectionText}
\alias{PlotNodes}
\alias{PlotSetBoundaries}
\alias{PlotSetLabels}
\alias{PlotUniverse}
\alias{plotVenn}
\alias{PlotVennGeometry}
\alias{plotxygraph}
\alias{pnpoly}
\alias{pnpolytest}
\alias{projection.thetaphi}
\alias{rectifyEdges}
\alias{remove.nonintersectionpoints}
\alias{rename.node}
\alias{renameFaces}
\alias{scythe.AWFE}
\alias{scythegr}
\alias{sector.to.xy}
\alias{set.function}
\alias{SetColours}
\alias{Setfun}
\alias{SetLabelPositions}
\alias{VennSetNames}
\alias{setSignature}
\alias{SetTextColours}
\alias{Smithn.function}
\alias{spliceEdgeIntoFace}
\alias{spliceinstead}
\alias{TDtograph}
\alias{thetah.to.xy}
\alias{ThreeCircles}
\alias{TwoCircles}
\alias{UniverseRange}
\alias{updateSignature}
\alias{UpViewports}
\alias{VDPlotArc}
\alias{VennFromSets}
\alias{VennSignature}
\alias{VisibleRange}
\alias{zeropos}
\alias{zerotheta}

\title{
Internal functions for Vennerable, plus the ones I haven't documented yet
}
\description{
As well as a number of internal helper functions, Vennerable includes code for doing polygon-polygon clipping in some (buggy) generality which may be documented if there is demand.
}
\author{
Jonathan Swinton (jonathan@swintons.net)
}

\keyword{ graphs }
